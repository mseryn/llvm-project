; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --check-globals --include-generated-funcs
; RUN: opt -passes=openmp-opt -openmp-stack-trace -S < %s | FileCheck %s

define void @kernel() {
  call void @__kmpc_kernel_init(i32 512, i16 1)
  call void @foo(), !dbg !6
  ret void
}

define void @foo() !dbg !10 {
entry:
  call void @bar(), !dbg !11
  call void bitcast (void (...)* @baz to void ()*)(), !dbg !12
  call void @bar(), !dbg !13
  ret void
}

define void @bar() !dbg !14 {
entry:
  ret void
}

define void @baz(...) !dbg !7 {
entry:
  ret void
}

declare void @__kmpc_kernel_init(i32, i16)

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}
!nvvm.annotations = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "device_stack_trace.c", directory: "/tmp/device_stack_trace.c")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{void ()* @kernel, !"kernel", i32 1}
!6 = !DILocation(line: 2, column: 14, scope: !7)
!7 = distinct !DISubprogram(name: "baz", scope: !1, file: !1, line: 2, type: !8, scopeLine: 2, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{null}
!10 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 4, type: !8, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!11 = !DILocation(line: 5, column: 3, scope: !10)
!12 = !DILocation(line: 6, column: 3, scope: !10)
!13 = !DILocation(line: 7, column: 3, scope: !10)
!14 = distinct !DISubprogram(name: "bar", scope: !1, file: !1, line: 1, type: !8, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)

;.
; CHECK: @[[__OMP_STACK_TRACE_DATA:[a-zA-Z0-9_$"\\.-]+]] = dso_local unnamed_addr constant [231 x i8] c"
;.
; CHECK-LABEL: define {{[^@]+}}@kernel() {
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 0)
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 22)
; CHECK-NEXT:    call void @__kmpc_kernel_init(i32 512, i16 1)
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 56)
; CHECK-NEXT:    call void @foo(), !dbg [[DBG6:![0-9]+]]
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define {{[^@]+}}@foo
; CHECK-SAME: () !dbg [[DBG10:![0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 114)
; CHECK-NEXT:    call void @bar(), !dbg [[DBG11:![0-9]+]]
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 172)
; CHECK-NEXT:    call void bitcast (void (...)* @baz to void ()*)(), !dbg [[DBG12:![0-9]+]]
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    call void @omp_stack_trace_push(i64 114)
; CHECK-NEXT:    call void @bar(), !dbg [[DBG13:![0-9]+]]
; CHECK-NEXT:    call void @omp_stack_trace_pop()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define {{[^@]+}}@bar
; CHECK-SAME: () !dbg [[DBG14:![0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define {{[^@]+}}@baz
; CHECK-SAME: (...) !dbg [[DBG7:![0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    ret void
;
;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
; CHECK: [[META1:![0-9]+]] = !DIFile(filename: "device_stack_trace.c", directory: "/tmp/device_stack_trace.c")
; CHECK: [[META2:![0-9]+]] = !{}
; CHECK: [[META3:![0-9]+]] = !{i32 7, !"Dwarf Version", i32 4}
; CHECK: [[META4:![0-9]+]] = !{i32 2, !"Debug Info Version", i32 3}
; CHECK: [[META5:![0-9]+]] = !{void ()* @kernel, !"kernel", i32 1}
; CHECK: [[DBG6]] = !DILocation(line: 2, column: 14, scope: !7)
; CHECK: [[DBG7]] = distinct !DISubprogram(name: "baz", scope: !1, file: !1, line: 2, type: !8, scopeLine: 2, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
; CHECK: [[META8:![0-9]+]] = !DISubroutineType(types: !9)
; CHECK: [[META9:![0-9]+]] = !{null}
; CHECK: [[DBG10]] = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 4, type: !8, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
; CHECK: [[DBG11]] = !DILocation(line: 5, column: 3, scope: !10)
; CHECK: [[DBG12]] = !DILocation(line: 6, column: 3, scope: !10)
; CHECK: [[DBG13]] = !DILocation(line: 7, column: 3, scope: !10)
; CHECK: [[DBG14]] = distinct !DISubprogram(name: "bar", scope: !1, file: !1, line: 1, type: !8, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
;.
